apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: 'true'
  labels:
    name: prometheus
  name: prometheus
  namespace: monitoring
spec:
  selector:
    app: prometheus
  type: ClusterIP
  ports:
  - name: prometheus
    protocol: TCP
    port: 9090
    targetPort: 9090
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: prometheus
  namespace: monitoring
spec:
  serviceName: "prometheus"
  replicas: 1
  template:
    metadata:
      labels:
        app: prometheus
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 0
      securityContext:
        runAsUser: 1000
        fsGroup: 2000
        runAsNonRoot: true
      containers:
      - name: prometheus
        image: prom/prometheus:PROMETHEUS_VERSION
        args:
          - '--storage.tsdb.path="/prometheus/data/"'
          - '--storage.tsdb.retention=15d'
          - '--config.file=/etc/prometheus/prometheus.yml'
        ports:
        - name: web
          containerPort: 9090
        volumeMounts:
        - name: config-volume
          mountPath: /etc/prometheus
        - name: prometheus
          mountPath: /prometheus
        - name: alerts-volume
          mountPath: /etc/alertmanager
        livenessProbe:
          httpGet:
            path: /
            port: 9090
          initialDelaySeconds: 30
          timeoutSeconds: 1
      volumes:
      - name: config-volume
        configMap:
          name: prometheus
      - name: alerts-volume
        configMap:
          name: alerts
  volumeClaimTemplates:
  - metadata:
      name: prometheus
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: standard
      resources:
        requests:
          storage: 20Gi
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: standard
provisioner: kubernetes.io/aws-ebs
parameters:
  type: gp2
